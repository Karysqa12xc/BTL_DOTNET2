@model BTL_DOTNET2.Models.PostCommentContentViewModel

@{
    ViewData["Title"] = "Thông tin bài đăng".ToUpper();
    
}
<script>
    document.addEventListener("DOMContentLoaded", function () {
        var previousUrl = "http://localhost:5117/Post/PostOfUser"; // Thay thế bằng document.referrer trong thực tế.

        // Phân tích URL để lấy thông tin controller và action
        var urlSegments = previousUrl.split('/');
        var action = urlSegments[urlSegments.length - 1];

        // Gán giá trị action vào thuộc tính asp-action
        var backButton = document.getElementById("backButton"); // Đặt ID cho nút quay lại để dễ truy cập
        backButton.href = `/Post/${action}`;
    });
</script>
<h1 class="text-center">@ViewData["Title"]</h1>

<div>
    <div class="d-flex"> 
        <div class="btn-group">
            <a id="backButton" asp-controller="Post" asp-action="Index>
                    <button type="button" class="btn btn-outline-danger me-3">
                        <i class="fa-solid fa-arrow-left"></i>
                </button>
            </a>

        
        @if (@ViewBag.CurrentUser == @Model.Post.User)
        {
            <a asp-controller="ContentPost" asp-action="Edit" asp-route-id="@Model?.Post.ContentPostId">
                <button type="button" class="btn btn-outline-primary">
                    <i class="fa-solid fa-pen-to-square"></i>
                </button>
            </a>
        }
    </div>
    @if (Model!.Post.IsChecked == false)
    {
        <div class="d-flex justify-content-between">
           
        @if (User.IsInRole("SuperAdmin") || User.IsInRole("Admin"))
        {
           
                <form asp-action="CheckedPost" method="post">
                    <input hidden asp-for="@Model.Post.PostId" name="id">
                    <input hidden type="checkbox" asp-for="@Model.Post.IsChecked" name="IsChecked">
                    <button type="submit" class="ms-1 btn btn-primary">
                        <i class="fa-solid fa-check"></i>
                    </button>
                </form>
        }
        <div class="ms-2 mt-1">
            <h4 >Chưa được duyệt</h4>
        </div>
        </div>
        
         
    }
    </div>
    
    <hr />
    <div class="container box-area">
        <div class="card">
            <div class="card-header h3 bg-success text-light">
                <div class="d-flex align-items-center">
                    <div>
                        <img src="@Model.Post.User!.PhotoUrl" alt="" class="rounded-avatar me-2">
                    </div>
                    <div>
                        @Html.DisplayFor(model => model.Post.User!.Nickname)
                    </div>
                </div>
            </div>
            <div class="card-body">
                <div class="card-title h4 d-flex justify-content-between">
                    @Html.DisplayFor(model => model.Post.Title)
                    <span class="badge @Model.Post.Cate.BgColor rounded-pill d-inline">@Model.Post.Cate.CateName</span> 
                </div>
                <hr/>
                <div class="card-text">
                    @Html.Raw(Model.Post.ContentPost.Paragram)
                </div>
                <hr/>
                
                 @if(Model.MediaContentPost != null && 
                Model.MediaContentPost.Any(c => !string.IsNullOrEmpty(c.Path))){
                <div class="mycontainer">
                    <div class="myimg-container">
                        <p class="card-text">
                            @foreach(var media in Model.MediaContentPost){
                                @if(!string.IsNullOrEmpty(media.Path)){
                                        @if(media.MediaType == MediaType.Image){
                                            <div class="image-zoom">
                                                <img class="" src="@media.Path" alt="">
                                            </div>
                                        }else if(media.MediaType == MediaType.Video){
                                            <div class="image-zoom">
                                                <video controls src="@media.Path" frameborder="0" width="100%" height="100%"></video>
                                            </div>
                                        }          
                                }
                            }  
                        </p>  
                       </div>
                       <div class="popup-img">
                            <span>&times;</span>
                            <img src="/images/post/Post_6cb003e2-df46-4298-8257-ded9c8dd3e01_gia huy hoảng hốt.jpg" alt="">
                        </div> 
                </div>
                }
              
                <div class="card-footer bg-success text-light">@Model.Post.PostTime</div>
            </div>
    </div>
    
    
    @if (@Model.Post.IsChecked != false)
    {
        <button class="btn btn-primary mt-3" onclick="showCommentPopup()" id="valueButton">
            <i id="commentIcon" class="fa-solid fa-comment"></i>
        </button>
    }


</div>
<div id="commentPopup" style="display: none;">
    @await Html.PartialAsync("_CreateComment", new BTL_DOTNET2.Models.PostCommentContentViewModel { Post = Model!.Post })
</div>
<hr/>
@if (@Model.Comments.Count() > 0)
{
    <h1 class="text-center">Bình luận</h1>
}

<div class="container box-area">
    @foreach (var commentWithMedia in Model.CommentWithMedias)
    {   
        var comment = commentWithMedia.Comment;
        var mediaContentComment = commentWithMedia.Media;

        <div class="card mb-3">
            <div class="card-body">
                <h3 class="card-header bg-danger text-light">
                    <div class="d-flex justify-content-between">
                        <div class="d-flex align-items-center">
                            <div class="me-3">
                                <img class="rounded-avatar" src="@comment.User!.PhotoUrl" alt="">
                            </div>
                            <div>
                                @comment.User!.Nickname
                            </div>
                        </div>
                    @if (comment!.User == @ViewBag.CurrentUser || User.IsInRole("SuperAdmin") || User.IsInRole("Admin"))
                    {
                        <div class="dropdown ms-2">
                            <button class="btn btn-primary dropdown-toggle"
                            onclick="showOptions('optionsMenu_@comment.CommentId')">
                                <i class="fa-solid fa-ellipsis"></i>
                            </button>
                             <div id="optionsMenu_@comment.CommentId" class="options-menu position-absolute end-30">
                                <ul class="list-group">
                                    <li class="list-group-item"><a style="text-decoration: none; color: black;"
                                            asp-controller="ContentComment" asp-action="Edit"
                                            asp-route-id="@comment.ContentCommentId">Edit</a>
                                    </li>
                                    <li class="list-group-item">
                                        <a style="text-decoration: none; color: black;" asp-controller="ContentComment"
                                            asp-action="Delete" asp-route-id="@comment.ContentCommentId">Delete</a>
                                    </li>
                                </ul>
                            </div>
                        </div>
                    }
                    </div>
                </h3>
                <p class="card-text">
                        <div class="" id="commentContent" style="display: block;">                            
                            @Html.Raw(@comment.ContentComment.Paragraph)
                        </div>
                    
                </p>
                <hr/>
                @if(mediaContentComment != null && 
                mediaContentComment.Any(c => !string.IsNullOrEmpty(c.Path))){
                <div class="mycontainer">
                    <div class="myimg-container">
                        <p class="card-text">
                            @foreach(var media in mediaContentComment){
                                @if(!string.IsNullOrEmpty(media.Path)){
                                    @if(media.MediaType == MediaType.Image){
                                            <div class="image-zoom">
                                                <img class="" src="@media.Path" alt="">
                                            </div>
                                    }else if(media.MediaType == MediaType.Video){
                                            <div class="image-zoom">
                                                <video controls src="@media.Path" frameborder="0" width="100%" height="100%"></video>
                                            </div>
                                    }          
                            }
                           
                        }  
                         </p>  
                       </div>
                       <div class="popup-img">
                            <span>&times;</span>
                            <img src="/images/post/Post_6cb003e2-df46-4298-8257-ded9c8dd3e01_gia huy hoảng hốt.jpg" alt="">
                        </div> 
                </div>
                }
                <p class="card-footer"><small class="text-muted">@comment.CommentTime</small></p>
            </div>
        </div>
    }
</div>
<script>

</script>
<script>
    var doubleTap = 0;
    function showCommentPopup() {
        var popup = document.getElementById("commentPopup");
        var button = document.getElementById("valueButton");
        var commentIcon = document.getElementById("commentIcon");
        if (doubleTap % 2 == 0) {
            popup.style.display = "block";
            commentIcon.classList.remove("fa-comment")
            commentIcon.classList.add("fa-comment-alt")
        }
        else {
            popup.style.display = "none";
            commentIcon.classList.remove('fa-comment-alt');
            commentIcon.classList.add('fa-comment');
        }
        doubleTap++;
    }
    function showOptions(menuId) {
        var menu = document.getElementById(menuId);
        menu.classList.toggle("show");
    }
    document.querySelectorAll('.myimg-container img')
        .forEach(image => {
                image.onclick = () => {
    document.querySelector('.popup-img').style.display = 'block';
    document.querySelector('.popup-img img').src = image.getAttribute('src');
  }
});
    document.querySelector(".popup-img span").onclick = () =>{
        document.querySelector('.popup-img').style.display = 'none';
}
</script>
