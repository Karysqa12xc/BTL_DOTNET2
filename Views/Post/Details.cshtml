@model BTL_DOTNET2.Models.PostCommentContentViewModel

@{
    ViewData["Title"] = "Thông tin bài đăng".ToUpper();
}

<h1 class="text-center">@ViewData["Title"]</h1>

<div>
    <div class="d-flex"> 
        <div class="btn-group">
        <a asp-asp-controller="Post" asp-action="Index">
            <button type="button" class="btn btn-outline-danger me-3">
                <i class="fa-solid fa-arrow-left"></i>
            </button>
        </a>
        @if (@ViewBag.CurrentUser == @Model.Post.User)
        {
            <a asp-controller="ContentPost" asp-action="Edit" asp-route-id="@Model?.Post.ContentPostId">
                <button type="button" class="btn btn-outline-primary">
                    <i class="fa-solid fa-pen-to-square"></i>
                </button>
            </a>
        }
    </div>
    @if (Model!.Post.IsChecked == false)
    {
        <div class="d-flex justify-content-between">
           
        @if (User.IsInRole("SuperAdmin") || User.IsInRole("Admin"))
        {
           
                <form asp-action="CheckedPost" method="post">
                    <input hidden asp-for="@Model.Post.PostId" name="id">
                    <input hidden type="checkbox" asp-for="@Model.Post.IsChecked" name="IsChecked">
                    <button type="submit" class="ms-1 btn btn-primary">
                        <i class="fa-solid fa-check"></i>
                    </button>
                </form>
               
            
        }
        <div class="ms-2 mt-1">
            <h4 >Chưa được duyệt</h4>
        </div>
        </div>
        
         
    }
    </div>
    
    <hr />
    <div class="container box-area">
        <div class="card rounded-4">
            <div class="card-header h3 bg-success text-light">
                <div class="d-flex align-items-center">
                    <div>
                        <img src="@Model.Post.User!.PhotoUrl" alt="" class="rounded-avatar me-2">
                    </div>
                    <div>
                        @Html.DisplayFor(model => model.Post.User!.Nickname)
                    </div>
                </div>
            </div>
            <div class="card-body">
                <div class="card-title h4 d-flex justify-content-between">
                    @Html.DisplayFor(model => model.Post.Title)
                    <span class="badge @Model.Post.Cate.BgColor rounded-pill d-inline">@Model.Post.Cate.CateName</span> 
                </div>
                <hr/>
                <div class="card-text">
                    @Html.Raw(Model.Post.ContentPost.Paragram)
                </div>
                <hr/>
                @* @ViewBag.ImgPostUrl *@
                @if(!string.IsNullOrEmpty(@Model.Post.ContentPost.Image)){
                    <img class="rounded card-img-top" src="@Model.Post.ContentPost.Image" style="max-width: 70%; max-height: 70%; object-fit: cover;">
                }
                @if(!string.IsNullOrEmpty(@Model.Post.ContentPost.Video)){
                    <iframe src="@Model.Post.ContentPost.Video" frameborder="0"></iframe>
                }
                <div class="card-footer bg-success text-light">@Model.Post.PostTime</div>
            </div>
        @* <dt class="col-sm-2">
            Người đăng:
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Post.User!.UserName)
        </dd>
        <dt class="col-sm-2">
            Tiêu đề:
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Post.Title)
        </dd>

        <dt class="col-sm-2">
            Chủ đề:
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Post.Cate.CateName)
        </dd>
        <dd class="col-sm-12">
            <b>Nội dung:</b>
            <br>
            @Html.Raw(Model.Post.ContentPost.Paragram)
        </dd>
        @if (@ViewBag.ImgPostUrl != null)
        {
            <dd class="col-sm-12">
                <b>Hình ảnh:</b>
                <br>
                <img class="rounded" src="@ViewBag.ImgPostUrl" style="max-width: 70%; max-height: 70%; object-fit: cover;">
            </dd>
        } *@
    </div>
    </div>
    
    @if (@Model.Post.IsChecked != false)
    {
        <button class="btn btn-primary" onclick="showCommentPopup()" id="valueButton">
            <i id="commentIcon" class="fa-solid fa-comment"></i>
        </button>
    }


</div>
<div id="commentPopup" style="display: none;">
    @await Html.PartialAsync("_CreateComment", new BTL_DOTNET2.Models.PostCommentContentViewModel { Post = Model!.Post })
</div>
<hr/>
@if (@Model.Comments.Count() > 0)
{
    <h1 class="text-center">Bình luận</h1>
}

<div class="container box-area">
    @foreach (var comment in Model.Comments)
    {   
        <div class="card mb-3">
            <div class="card-body">
                <h3 class="card-header bg-danger text-light">
                    <div class="d-flex justify-content-between">
                        <div class="d-flex align-items-center">
                            <div class="me-3">
                                <img class="rounded-avatar" src="@comment.User!.PhotoUrl" alt="">
                            </div>
                            <div>
                                @comment.User!.Nickname
                            </div>
                        </div>
                    @if (comment!.User == @ViewBag.CurrentUser || User.IsInRole("SuperAdmin") || User.IsInRole("Admin"))
                    {
                        <div class="dropdown ms-2">
                            <button class="btn btn-primary dropdown-toggle"
                            onclick="showOptions('optionsMenu_@comment.CommentId')">
                                <i class="fa-solid fa-ellipsis"></i>
                            </button>
                             <div id="optionsMenu_@comment.CommentId" class="options-menu position-absolute end-30">
                                <ul class="list-group">
                                    <li class="list-group-item"><a style="text-decoration: none; color: black;"
                                            asp-controller="ContentComment" asp-action="Edit"
                                            asp-route-id="@comment.ContentCommentId">Edit</a>
                                    </li>
                                    <li class="list-group-item">
                                        <a style="text-decoration: none; color: black;" asp-controller="ContentComment"
                                            asp-action="Delete" asp-route-id="@comment.ContentCommentId">Delete</a>
                                    </li>
                                </ul>
                            </div>
                        </div>
                    }
                    </div>
                </h3>
                <p class="card-text">
                    <div>
                        <div class="" id="commentContent" style="display: block;">                            
                            @Html.Raw(@comment.ContentComment.Paragraph)
                        </div>
                        @if(!string.IsNullOrEmpty(@comment.ContentComment.Image)){
                            <div>
                                <img class="img-fluid rounded" src="@comment.ContentComment.Image" alt="" height="450" width="450">
                            </div>
                        }
                        @if(!string.IsNullOrEmpty(@comment.ContentComment.Video)){
                            <iframe src="@comment.ContentComment.Video" frameborder="0"></iframe>
                        }
                    </div>
                </p>
                <p class="card-footer"><small class="text-muted">@comment.CommentTime</small></p>
            </div>
        </div>
        

        @* <tr>
            <td>
                <div class="d-flex algin-items-center">
                <div class="h2">@comment.User!.UserName</div> 
                    @if (comment!.User == @ViewBag.CurrentUser || User.IsInRole("SuperAdmin") || User.IsInRole("Admin"))
                    {
                        <div class="dropdown">
                            <button class="btn btn-primary dropdown-toggle"
                            onclick="showOptions('optionsMenu_@comment.CommentId')">
                                <i class="fa-solid fa-ellipsis"></i>
                            </button>
                             <div id="optionsMenu_@comment.CommentId" class="options-menu position-absolute end-30">
                                <ul class="list-group">
                                    <li class="list-group-item"><a style="text-decoration: none; color: black;"
                                            asp-controller="ContentComment" asp-action="Edit"
                                            asp-route-id="@comment.ContentCommentId">Edit</a>
                                    </li>
                                    <li class="list-group-item">
                                        <a style="text-decoration: none; color: black;" asp-controller="ContentComment"
                                            asp-action="Delete" asp-route-id="@comment.ContentCommentId">Delete</a>
                                    </li>
                                </ul>
                            </div>
                        </div>
                    }

                </div>

            </td>
        </tr>
        <tr>
            
        </tr>
        <tr>
            <td>@Html.Raw(@comment.ContentComment.Paragraph)</td>
        </tr>
        <tr>
            <td>
                <img class="rounded float-start" src="@comment.ContentComment.Image" alt=""
                    style="max-width: 50%; max-height: 50%;">
            </td>
        </tr>
        <tr>
            <td>@comment.CommentTime</td>
        </tr> *@
    }

</div>
<script>

</script>
<script>
    var doubleTap = 0;
    function showCommentPopup() {
        var popup = document.getElementById("commentPopup");
        var button = document.getElementById("valueButton");
        var commentIcon = document.getElementById("commentIcon");
        if (doubleTap % 2 == 0) {
            popup.style.display = "block";
    @* button.innerText = "Hide Comment"; *@
                commentIcon.classList.remove("fa-comment")
            commentIcon.classList.add("fa-comment-alt")
        }
        else {
            popup.style.display = "none";
    @* button.innerText = "Add Comment"; *@
                commentIcon.classList.remove('fa-comment-alt');
            commentIcon.classList.add('fa-comment');
        }
        doubleTap++;
    }
    function showOptions(menuId) {
        var menu = document.getElementById(menuId);
        menu.classList.toggle("show");
    }
    document.addEventListener("DOMContentLoaded", function () {
        var commentContentElement = document.getElementById("commentContent");
        var commentImageElement = document.getElementById("commentImage");

        // Kiểm tra xem nội dung HTML có tồn tại không và ẩn nó nếu có
        if (commentContentElement) {
            var commentContent = commentContentElement.innerHTML;
            var parser = new DOMParser();
            var doc = parser.parseFromString(commentContent, 'text/html');
            var images = doc.getElementsByTagName('img');

            // Kiểm tra xem có hình ảnh trong nội dung HTML không và hiển thị nếu có
            if (images.length > 0) {
                var imageUrl = images[0].src;
                commentImageElement.src = imageUrl;
                commentImageElement.style.display = "block";
            }
        }
    });
</script>
