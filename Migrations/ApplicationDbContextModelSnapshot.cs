// <auto-generated />
using System;
using BTL_DOTNET2.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BTL_DOTNET2.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BTL_DOTNET2.Models.Category", b =>
                {
                    b.Property<int>("CateId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CateId"));

                    b.Property<string>("CateName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CateId");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("BTL_DOTNET2.Models.Comment", b =>
                {
                    b.Property<int>("CommentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CommentId"));

                    b.Property<DateTime>("CommentTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("ContentCommentId")
                        .HasColumnType("int");

                    b.Property<int>("PostId")
                        .HasColumnType("int")
                        .HasColumnName("postId");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("CommentId");

                    b.HasIndex("ContentCommentId");

                    b.HasIndex("PostId");

                    b.HasIndex("UserId");

                    b.ToTable("Comments");
                });

            modelBuilder.Entity("BTL_DOTNET2.Models.ContentComment", b =>
                {
                    b.Property<int>("ContentCommentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ContentCommentId"));

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Paragram")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ContentCommentId");

                    b.ToTable("ContentComments");
                });

            modelBuilder.Entity("BTL_DOTNET2.Models.ContentPost", b =>
                {
                    b.Property<int>("ContentPostId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ContentPostId"));

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Paragram")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ContentPostId");

                    b.ToTable("ContentPosts");
                });

            modelBuilder.Entity("BTL_DOTNET2.Models.Notification", b =>
                {
                    b.Property<int>("NotiId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NotiId"));

                    b.Property<int>("PostId")
                        .HasColumnType("int")
                        .HasColumnName("postId");

                    b.Property<DateTime>("Time")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("NotiId");

                    b.HasIndex("PostId");

                    b.HasIndex("UserId");

                    b.ToTable("Notifications");
                });

            modelBuilder.Entity("BTL_DOTNET2.Models.Post", b =>
                {
                    b.Property<int>("PostId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("postId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PostId"));

                    b.Property<int>("CateId")
                        .HasColumnType("int");

                    b.Property<int>("CommentTotal")
                        .HasColumnType("int");

                    b.Property<int>("ContentPostId")
                        .HasColumnType("int");

                    b.Property<bool>("IsSave")
                        .HasColumnType("bit")
                        .HasColumnName("isSave");

                    b.Property<DateTime>("PostTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("PostId");

                    b.HasIndex("CateId");

                    b.HasIndex("ContentPostId");

                    b.HasIndex("UserId");

                    b.ToTable("Posts");
                });

            modelBuilder.Entity("BTL_DOTNET2.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("Avatar")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmailAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("BTL_DOTNET2.Models.Comment", b =>
                {
                    b.HasOne("BTL_DOTNET2.Models.ContentComment", "ContentComment")
                        .WithMany("Comments")
                        .HasForeignKey("ContentCommentId")
                        .IsRequired()
                        .HasConstraintName("FK_Comments_ContentComments");

                    b.HasOne("BTL_DOTNET2.Models.Post", "Post")
                        .WithMany("Comments")
                        .HasForeignKey("PostId")
                        .IsRequired()
                        .HasConstraintName("FK_Comments_Posts");

                    b.HasOne("BTL_DOTNET2.Models.User", "User")
                        .WithMany("Comments")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK_Comments_Users");

                    b.Navigation("ContentComment");

                    b.Navigation("Post");

                    b.Navigation("User");
                });

            modelBuilder.Entity("BTL_DOTNET2.Models.Notification", b =>
                {
                    b.HasOne("BTL_DOTNET2.Models.Post", "Post")
                        .WithMany("Notifications")
                        .HasForeignKey("PostId")
                        .IsRequired()
                        .HasConstraintName("FK_Notifications_Posts");

                    b.HasOne("BTL_DOTNET2.Models.User", "User")
                        .WithMany("Notifications")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK_Notifications_Users");

                    b.Navigation("Post");

                    b.Navigation("User");
                });

            modelBuilder.Entity("BTL_DOTNET2.Models.Post", b =>
                {
                    b.HasOne("BTL_DOTNET2.Models.Category", "Cate")
                        .WithMany("Posts")
                        .HasForeignKey("CateId")
                        .IsRequired()
                        .HasConstraintName("FK_Posts_Categories");

                    b.HasOne("BTL_DOTNET2.Models.ContentPost", "ContentPost")
                        .WithMany("Posts")
                        .HasForeignKey("ContentPostId")
                        .IsRequired()
                        .HasConstraintName("FK_Posts_ContentPosts");

                    b.HasOne("BTL_DOTNET2.Models.User", "User")
                        .WithMany("Posts")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK_Posts_Users");

                    b.Navigation("Cate");

                    b.Navigation("ContentPost");

                    b.Navigation("User");
                });

            modelBuilder.Entity("BTL_DOTNET2.Models.Category", b =>
                {
                    b.Navigation("Posts");
                });

            modelBuilder.Entity("BTL_DOTNET2.Models.ContentComment", b =>
                {
                    b.Navigation("Comments");
                });

            modelBuilder.Entity("BTL_DOTNET2.Models.ContentPost", b =>
                {
                    b.Navigation("Posts");
                });

            modelBuilder.Entity("BTL_DOTNET2.Models.Post", b =>
                {
                    b.Navigation("Comments");

                    b.Navigation("Notifications");
                });

            modelBuilder.Entity("BTL_DOTNET2.Models.User", b =>
                {
                    b.Navigation("Comments");

                    b.Navigation("Notifications");

                    b.Navigation("Posts");
                });
#pragma warning restore 612, 618
        }
    }
}
